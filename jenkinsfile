pipeline {
    agent any

    environment {
        PRIMARY_DB_ID = 'primary-db'
        SNS_TOPIC_ARN = '<your-sns-topic>'
    }

    stages {
        stage('Check Replication Health') {
            steps {
                script {
                    def replicationStatus = sh(script: """
                        aws rds describe-db-instances --db-instance-identifier $PRIMARY_DB_ID \
                        --query 'DBInstances[0].ReadReplicaDBInstanceIdentifiers' \
                        --region us-east-1 --output text
                    """, returnStdout: true).trim()

                    if (!replicationStatus) {
                        error("Replication is down. Initiating failover.")
                    } else {
                        echo "Replication is healthy."
                    }
                }
            }
        }

        stage('Trigger Lambda for Failover') {
            steps {
                script {
                    sh """
                        aws lambda invoke --function-name failover-trigger \
                        --region us-west-2 /tmp/response.json
                    """
                    echo "Failover triggered via Lambda."
                }
            }
        }

        stage('Run Maintenance via SSM') {
            steps {
                script {
                    sh """
                        aws ssm send-command --document-name "AWS-RunShellScript" \
                        --targets "Key=instanceIds,Values=<your-ec2-instance-id>" \
                        --comment "Running DB maintenance tasks" \
                        --parameters '{"commands":["sudo yum update -y"]}' \
                        --region us-east-1
                    """
                    echo "Maintenance tasks completed."
                }
            }
        }
    }
}